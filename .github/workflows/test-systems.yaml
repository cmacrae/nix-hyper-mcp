name: Test Supported Systems

on:
  push:
    paths:
      - 'flake.nix'
      - 'flake.lock'
      - '**/*.nix'
      - '.github/workflows/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'flake.nix'
      - 'flake.lock'
      - '**/*.nix'
      - '.github/workflows/**'

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            system: x86_64-linux
          - os: ubuntu-24.04-arm
            system: aarch64-linux
          - os: macos-latest
            system: aarch64-darwin

    runs-on: ${{ matrix.os }}
    permissions:
      actions: write # For purging caches
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@v30

      - name: Cache Nix store
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-${{ matrix.system }}-${{ hashFiles('flake.lock', '**/*.nix') }}
          restore-prefixes-first-match: nix-${{ matrix.system }}-
          gc-max-store-size-linux: 3G
          gc-max-store-size-macos: 3G

      - name: Test Package
        run: |
          echo "Test: ${{ matrix.system }} package"
          nix build .#packages."${{ matrix.system }}".default --no-link -L
          pkg_path=$(nix path-info .#packages."${{ matrix.system }}".default)

          echo "Running ${pkg_path}/bin/hyper-mcp -V"
          "${pkg_path}/bin/hyper-mcp" -V

          echo "PASS: ${{ matrix.system }} package"

      - name: Test home-manager module
        run: |
          echo "Test: ${{ matrix.system }} home-manager module"
          nix build ./tests/home#homeConfigurations.test-${{ matrix.system }}.activationPackage --no-link -L
          hm_path=$(nix path-info ./tests/home#homeConfigurations.test-${{ matrix.system }}.activationPackage)

          if [ -f "${hm_path}/home-path/bin/hyper-mcp" ]; then
            echo "PASS: Wrapped hyper-mcp binary found at ${hm_path}/home-path/bin/hyper-mcp"
          else
            echo >&2 "ERROR: No wrapped hyper-mcp binary found"
            exit 1
          fi

          echo "PASS: ${{ matrix.system }} home-manager module"

      - name: Test nixos module
        if: matrix.system != 'aarch64-darwin'
        run: |
          echo "Test: ${{ matrix.system }} nixos module"
          nix build ./tests/nixos#nixosConfigurations.test-${{ matrix.system }}.config.system.build.toplevel --no-link -L
          nixos_path=$(nix path-info ./tests/nixos#nixosConfigurations.test-${{ matrix.system }}.config.system.build.toplevel)

          if [ -f "${nixos_path}/sw/bin/hyper-mcp" ]; then
            echo "PASS: nixos wrapped hyper-mcp binary found at ${nixos_path}/sw/bin/hyper-mcp"
          else
            echo >&2 "ERROR: No wrapped hyper-mcp binary found in nixos system packages"
            exit 1
          fi

          echo "PASS: ${{ matrix.system }} nixos module"

      - name: Test darwin module
        if: matrix.system == 'aarch64-darwin'
        run: |
          echo "Test: ${{ matrix.system }} darwin module"
          nix build ./tests/darwin#darwinConfigurations.test-${{ matrix.system }}.config.system.build.toplevel --no-link -L
          darwin_path=$(nix path-info ./tests/darwin#darwinConfigurations.test-${{ matrix.system }}.config.system.build.toplevel)

          if [ -f "${darwin_path}/sw/bin/hyper-mcp" ]; then
            echo "PASS: darwin wrapped hyper-mcp binary found at ${darwin_path}/sw/bin/hyper-mcp"
          else
            echo >&2 "ERROR: No wrapped hyper-mcp binary found in darwin system packages"
            exit 1
          fi

          echo "PASS: ${{ matrix.system }} darwin module"
